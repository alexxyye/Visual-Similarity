study6 <- merge(chinese7, korean7, all = TRUE)
chinese8 <-mean_df_res[11, ]
korean8 <-mean_df_res[14, ]
study7 <- merge(chinese8, korean8, all = TRUE)
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
summary_list <- list()
i = 0
for (studies in studylist){
i = i + 1
# wide to long
studies <- melt(studies, id.vars = "condition")
studies <- arrange(studies, condition) #sorting by condition
# paired t-test
t_test <- t.test(value ~ condition,
data = studies,
paired = TRUE)
# effect size
efs <- cohensD(value ~ condition,
data   = studies,
method = "paired")
summaries <- capture.output(print(t_test), print(efs))
summary_list[[i]] <- summaries
}
View(summary_list)
summary_list[[1]]
# exporting data
writeLines(summary_list, con = file('summaries.csv'))
?writeLines
as.character(summaries)
as.character(summary_list)
cha_sum_list <- as.character(summary_list)
writeLines(summary_list, con = file('summaries.csv'))
cha_sum_list <- as.character(summary_list)
writeLines(cha_sum_list, con = file('summaries.csv'))
summaries <- capture.output(print(t_test), print(efs))
# packages needed
library(readr)
library(reshape2)
library(dplyr)
library(lsr)
# set cd
setwd("/Users/alex/Documents/GitHub/Visual-Similarity/analysis")
## get data
mean_df_res <- read_csv("mean_df_res.csv", col_types = cols(sum_of_square = col_skip()))
names(mean_df_res)[1] <- "condition" #change 1st column name
## compare between 2 conditions within each study
#get data
symbol1 <- mean_df_res[1, ]
german1 <- mean_df_res[4, ]
study1 <- merge(symbol1, german1, all = TRUE)
symbol2 <- mean_df_res[2, ]
english2 <- mean_df_res[6, ]
study2 <- merge(symbol2, english2, all = TRUE)
symbol3 <- mean_df_res[3, ]
english3 <- mean_df_res[7, ]
study3 <- merge(symbol3, english3, all = TRUE)
falsefont4 <-mean_df_res[8, ]
german4 <- mean_df_res[5, ]
study4 <- merge(falsefont4, german4, all = TRUE)
chinese5 <-mean_df_res[9, ]
korean5 <-mean_df_res[12, ]
study5 <- merge(chinese5, korean5, all = TRUE)
chinese7 <-mean_df_res[10, ]
korean7 <-mean_df_res[13, ]
study6 <- merge(chinese7, korean7, all = TRUE)
chinese8 <-mean_df_res[11, ]
korean8 <-mean_df_res[14, ]
study7 <- merge(chinese8, korean8, all = TRUE)
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
#
# # filename function
# make_filename = function(label, number){
#   # these can be easily turned into parameters
#   suffix = ""
#   dir = "./"
#
#   # doing this, putting it all on a single line or using pipe %>%
#   # is just matter of style
#   filename = paste(label, number, suffix, sep="_")
#   filename = paste0(filename, ".csv")
#   filename = file.path(dir, filename)
#
#   filename
# }
#
# combinations = expand.grid("label"=string_label, "number"=string_number)
# filenames = mapply(make_filename, combinations$label, combinations$number)
#
# save_element = function(element, label, number){
#   filename = make_filename(label, number)
#   write.csv(element, filename,row.names=TRUE)
# }
#
# combinations = expand.grid("label"=string_label, "number"=string_number)
# mapply(save_element, myelement, combinations$label, combinations$number)
summary_list <- list()
i = 0
for (studies in studylist){
i = i + 1
# wide to long
studies <- melt(studies, id.vars = "condition")
studies <- arrange(studies, condition) #sorting by condition
# paired t-test
t_test <- t.test(value ~ condition,
data = studies,
paired = TRUE)
# effect size
efs <- cohensD(value ~ condition,
data   = studies,
method = "paired")
summaries <- capture.output(print(t_test), print(efs))
summary_list[[i]] <- summaries
}
# exporting data
cha_sum_list <- as.character(summary_list)
writeLines(cha_sum_list, con = file('summaries.txt'))
install.packages("metasens")
library("robumeta")
library("metafor")
library("dplyr")
dat <- get(data(dat.molloy2014))
dat <- mutate(dat, study_id = 1:16) # This adds a study id column
dat <- dat %>% select(study_id, authors:quality) # This brings the study id column to the front
View(dat)
yourdata <- read.csv("yourdata.csv", header=TRUE)
dat <- escalc(measure="ZCOR", ri=ri, ni=ni, data=dat, slab=paste(authors, year, sep=", "))
View(dat)
res <- rma(yi, vi, data=dat)
res
predict(res, digits=3, transf=transf.ztor)
confint(res)
?confint
inf <- influence(res)
print(inf)
plot(inf)
forest(res, xlim=c(-1.6,1.6), atransf=transf.ztor,
at=transf.rtoz(c(-.4,-.2,0,.2,.4,.6)), digits=c(2,1), cex=.8)
text(-1.6, 18, "Author(s), Year", pos=4, cex=.8)
text( 1.6, 18, "Correlation [95% CI]", pos=2, cex=.8)
funnel(res, xlab = "Correlation coefficient")
regtest(res)
ranktest(res)
dat_bias <- read.csv("dat_bias.csv")
?metabin
library(metasens)
library(meta)
library(metafor)
library(dplyr)
library(readxl)
?metabin
# import data
meta <- read_excel("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.xlsx")
# call the metacont
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
# import data
meta <- read_excel("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.xlsx")
# call the metacont
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
# call the metacont
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
View(meta)
meta <- read_excel("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.xlsx")
View(meta)
library(metasens)
library(meta)
library(metafor)
library(dplyr)
library(readxl)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
library(readr)
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
View(meta)
# call the metacont
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
metaReg = rma(yi, vi, mods = ~visual.similarity+writing.system, data = dat, dat$author)
# Random-effect model
dat <- escalc("SMD",
m1i = mean.early.E64,
m2i = mean.late.E64,
sd1i = sd.early.E64,
sd2i = sd.late.E64,
n1i = n.early,
n2i = n.late,
data = meta,
slab = meta$author
)
# subgroup
dat.pos <- head(dat, 3)
dat.neg <- tail(dat, 4)
meta.RE = rma(yi, vi, data = dat, slab = dat$author)
meta.RE.pos = rma(yi, vi, data = dat.pos, dat.pos$author)
meta.RE = rma(yi, vi, data = dat, slab = dat$author)
meta.RE.pos = rma(yi, vi, data = dat.pos, dat.pos$author)
meta.RE.neg = rma(yi, vi, data = dat.neg, dat.neg$author)
View(dat.neg)
metaReg = rma(yi, vi, mods = ~visual.similarity+writing.system, data = dat, dat$author)
?rma
View(dat)
View(dat)
?escalc
?metareg
regression <- metareg(dat,formula = yi ~ visual.similarity)
?metagen
?metareg
?metabin
?rma
# packages needed
library(readr)
library(reshape2)
library(dplyr)
library(lsr)
setwd("/Users/alex/Documents/GitHub/Visual-Similarity/analysis")
## get data
mean_df_res <- read_csv("mean_df_res.csv", col_types = cols(sum_of_square = col_skip()))
names(mean_df_res)[1] <- "condition" #change 1st column name
## compare between 2 conditions within each study
#get data
symbol1 <- mean_df_res[1, ]
german1 <- mean_df_res[4, ]
study1 <- merge(symbol1, german1, all = TRUE)
symbol2 <- mean_df_res[2, ]
english2 <- mean_df_res[6, ]
study2 <- merge(symbol2, english2, all = TRUE)
symbol3 <- mean_df_res[3, ]
english3 <- mean_df_res[7, ]
study3 <- merge(symbol3, english3, all = TRUE)
falsefont4 <-mean_df_res[8, ]
german4 <- mean_df_res[5, ]
study4 <- merge(falsefont4, german4, all = TRUE)
chinese5 <-mean_df_res[9, ]
korean5 <-mean_df_res[12, ]
study5 <- merge(chinese5, korean5, all = TRUE)
chinese7 <-mean_df_res[10, ]
korean7 <-mean_df_res[13, ]
study6 <- merge(chinese7, korean7, all = TRUE)
chinese8 <-mean_df_res[11, ]
korean8 <-mean_df_res[14, ]
study7 <- merge(chinese8, korean8, all = TRUE)
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
View(symbol1)
View(study1)
View(study4)
?meta ont
?metacont
library(metasens)
library(meta)
library(metafor)
library(dplyr)
library(readr)
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
View(mod)
# Random-effect model
dat <- escalc("SMD",
m1i = mean.early.E64,
m2i = mean.late.E64,
sd1i = sd.early.E64,
sd2i = sd.late.E64,
n1i = n.early,
n2i = n.late,
data = meta,
slab = meta$author
)
View(dat)
?escalc
View(mod)
View(mod)
View(dat)
dat$sei.early <- dat$sd.early/sqrt(dat$n.early)
dat$sei.late <- dat$sd.late/sqrt(dat$n.late)
View(dat)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
# Random-effect model
dat <- escalc("SMD",
m1i = mean.early.E64,
m2i = mean.late.E64,
sd1i = sd.early.E64,
sd2i = sd.late.E64,
n1i = n.early,
n2i = n.late,
data = meta,
slab = meta$author
)
dat$sei.early <- dat$sd.early/sqrt(dat$n.early)
dat$sei.late <- dat$sd.late/sqrt(dat$n.late)
View(dat)
View(dat)
?escalc
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
# Random-effect model
dat <- escalc("SMD",
m1i = mean.early.E64,
m2i = mean.late.E64,
sd1i = sd.early.E64,
sd2i = sd.late.E64,
n1i = n.early,
n2i = n.late,
data = meta,
slab = meta$author
)
View(dat)
dat$sei <- sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+yi^2/2(dat$n.early+dat$n.late))
View(dat)
dat$sei <- sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+dat$yi^2/2(dat$n.early+dat$n.late))
sei <- sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+dat$yi^2/2(dat$n.early+dat$n.late))
sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+dat$yi^2/2(dat$n.early+dat$n.late))
sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+(dat$yi^2/2(dat$n.early+dat$n.late)))
?smd2or
?metagen
View(dat)
metagen(yi, sqrt(vi), studlab = author, data = dat, sm = "SMD")
dat2 <-metagen(yi, sqrt(vi), studlab = author, data = dat, sm = "SMD")
View(dat2)
View(mod)
View(dat2)
?rma
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# forest plot mod
forest(mod)
# Random-effect model
dat <- escalc("SMD",
m1i = mean.early.E64,
m2i = mean.late.E64,
sd1i = sd.early.E64,
sd2i = sd.late.E64,
n1i = n.early,
n2i = n.late,
data = meta,
slab = meta$author
)
# dat2 <-metagen(yi, sqrt(vi), studlab = author, data = dat, sm = "SMD")
# sei <- sqrt((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late)+(dat$yi^2/2(dat$n.early+dat$n.late)))
# subgroup
dat.pos <- head(dat, 3)
dat.neg <- tail(dat, 4)
meta.RE = rma(yi, vi, data = dat, slab = dat$author)
metaReg = rma(yi, vi, mods = ~visual.similarity + writing.system, data = dat, dat$author)
View(dat)
?rma
metaReg = rma(yi, vi, data = dat, dat$author, mods = ~visual.similarity + writing.system)
# Moderators
metaReg = rma(yi, vi, data = dat, dat$author)
?metareg
metareg(dat, formula = ~visual.similarity + writing.system, method.tau = "REML", hakn = TRUE)
metareg(meta, formula = ~visual.similarity + writing.system, method.tau = "REML", hakn = TRUE)
metaReg = rma(yi, vi, data = dat, dat$author, mods = ~visual.similarity + writing.system)
View(dat)
dat %>% select(n.early, n.late, yi) %>% mutate(sei = sqrt(((n.early+n.late)/(n.early*n.late))+(yi^2/2*(n.early+n.late))))
View(dat)
sei <- dat %>% select(n.early, n.late, yi) %>% mutate(sei = sqrt(((n.early+n.late)/(n.early*n.late))+(yi^2/2*(n.early+n.late))))
View(sei)
dat$sei <- sqrt(((dat$n.early+dat$n.late)/(dat$n.early*dat$n.late))+(dat$yi^2/2*(dat$n.early+dat$n.late)))
View(dat)
rm(sei)
metaReg = rma(yi, vi, sei, data = dat, dat$author, mods = ~visual.similarity + writing.system)
?rma
View(mod)
View(mod)
?metareg
metareg(mod, formula = yi ~ visual.similarity, method.tau = "REML", hakn = TRUE)
metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
mod
View(mod)
View(meta)
meta$`visual similarity`
metaReg = rma(yi, vi, sei, data = dat, dat$author, mods = ~`visual similarity` + writing.system)
metareg(mod, formula = ~ `visual similarity`, method.tau = "REML", hakn = TRUE)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
MetaReg <- metareg(mod, formula = ~ `visual similarity`, method.tau = "REML", hakn = TRUE)
View(MetaReg)
MetaReg
bubble(MetaReg, studlab = TRUE)
print(colnames(meta))
colnames(meta)[30] <- visual.similarity
colnames(meta)[30] <- "visual.similarity"
print(colnames(meta))
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
# Meta regression
MetaReg <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
bubble(MetaReg, studlab = TRUE)
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
sm = "SMD")
MetaReg <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
MetaReg.vs <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
MetaReg.ws <- metareg(mod, formula = ~ writing.system, method.tau = "REML", hakn = TRUE)
bubble(MetaReg.ws, studlab = TRUE)
