submit()
submit()
skip()
mad_libs(uni, small, girl)
submit
submit()
submit()
submit()
"h" %p% "i"
rm(list=ls())
skip()
"I" %p% "love" %p% "R!"
N1onset <- read.table("~/Downloads/Alex/1_Maurer_2005_ZRH/N1onset.txt", header=TRUE, row.names=1, quote="\"")
View(N1onset)
`1_N1offset` <- read.csv("~/Downloads/Alex/data/1_N1offset.csv", row.names=1)
View(`1_N1offset`)
`1_N1offset` <- read.csv("~/Downloads/Alex/data/1_N1offset.csv", row.names=1)
View(`1_N1offset`)
colnames(`1_N1offset`)[1] <- “timepoint”
colnames("1_N1offset")[1] <- "timepoint"
colnames("1_N1offset")[1] <- "1"
colnames(1_N1offset)[1] <- "timepoint"
colnames(`1_N1offset`)[1] <- "timepoint"
View(`1_N1offset`)
View(`1_N1offset`)
N1offset_01 <- read.csv("~/Downloads/Alex/data/1_N1offset.csv")
View(N1offset_01)
colnames(N1offset_01)[1] <- "time"
library("ggplot2")
library("reshape2")
?melt
names(N1offset_01)
col_names <- names(N1offset_01)
view(col_names)
col_names
col_names[-1]
col_names <- col_names[-1]
typeof(col_names)
c(col_names)
install.packages(c("robumeta", "metafor", "dplyr"))
library("robumeta")
library("metafor")
library("dplyr")
dat <- get(data(dat.molloy2014))
dat <- mutate(dat, study_id = 1:16) # This adds a study id column
dat <- dat %>% select(study_id, authors:quality) # This brings the study id column to the front
View(dat)
dat <- escalc(measure="ZCOR", ri=ri, ni=ni, data=dat, slab=paste(authors, year, sep=", "))
res <- rma(yi, vi, data=dat)
res
predict(res, digits=3, transf=transf.ztor)
confint(res)
b_res <- rma(yi, vi, data=dat, slab=study_id)
baujat(b_res)
inf <- influence(res)
print(inf)
plot(inf)
forest(res, xlim=c(-1.6,1.6), atransf=transf.ztor,
at=transf.rtoz(c(-.4,-.2,0,.2,.4,.6)), digits=c(2,1), cex=.8)
text(-1.6, 18, "Author(s), Year", pos=4, cex=.8)
text( 1.6, 18, "Correlation [95% CI]", pos=2, cex=.8)
funnel(res, xlab = "Correlation coefficient")
regtest(res)
ranktest(res)
library(readxl)
Meta <- read_excel("/Volumes/Data/Alex/data/Meta.xlsx")
View(Meta)
install.packages(c("robumeta", "metafor", "dplyr"))
library("robumeta")
library("metafor")
library("dplyr")
dat <- mutate(Meta, study_id = 1:7) # This adds a study id column
dat <- dat %>% select(study_id, authors:quality) # This brings the study id column to the front
dat <- dat %>% select(study_id, author)
dat <- mutate(Meta, study_id = 1:7) # This adds a study id column
View(dat)
dat <- dat %>% select(study_id, author:quality) #
dat <- mutate(Meta, study_id = 1:7) # This adds a study id column
dat <- dat %>% select(study_id, author) # This brings the study id column to the front
<- mutate(Meta, study_id = 1:7) # This adds a study id column
dat <- dat %>% select(study_id) # This brings the study id column to the front
dat <- mutate(Meta, study_id = 1:7) #
dat <- escalc(measure="ZCOR", ri=ri, ni=ni, data=dat, slab=paste(author, pubyear, sep=", "))
dat <- escalc(measure="ZCOR", sd.early=sd.early, sd.late=sd.late, slab=paste(author, pubyear, sep=", "))
dir()
system("type R")
library(readr)
# read data
ANT_1_61 <- read_csv(file = '/Users/alex/Downloads/ANT_1_61.csv')
LNS_1_61 <- read_csv(file = '/Users/alex/Downloads/LNS_1_61.csv')
View(ANT_1_61)
library(readxl)
X5_korean_Chinese_all <- read_excel("Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv")
`5_korean_Chinese_all` <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv")
View(`5_korean_Chinese_all`)
library("writexl")
library("xlsx")
install.packages("xlsx")
library("xlsx")
install.packages("writexl")
library("writexl")
write_xlsx(`5_korean_Chinese_all`,"~/Documents/GitHub/Visual-Similarity/5_korean_chinese_all.xlsx")
write_xlsx(df ,"~/Documents/GitHub/Visual-Similarity/5_korean_chinese_all.xlsx")
df <- read.csv("~/Documents/GitHub/Visual-Similarity/7_korean_Chinese_all.csv")
View(`5_korean_Chinese_all`)
write_xlsx(df ,"~/Documents/GitHub/Visual-Similarity/5_korean_chinese_all.xlsx")
df <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv")
write_xlsx(df ,"~/Documents/GitHub/Visual-Similarity/5_korean_chinese_all.xlsx")
df <- read.csv("~/Documents/GitHub/Visual-Similarity/7_korean_Chinese_all.csv")
write_xlsx(df ,"~/Documents/GitHub/Visual-Similarity/7_korean_chinese_all.xlsx")
df <- read.csv("~/Documents/GitHub/Visual-Similarity/8_korean_Chinese_all.csv")
write_xlsx(df ,"~/Documents/GitHub/Visual-Similarity/8_korean_chinese_all.xlsx")
install(imagemagick)
install("imagemagick")
install.packages("magick")
library(magick)
img <- image_read_svg('/Users/alex/Downloads/CSH1.png')
install.packages(rsvg)
install.packages("rsvg")
img <- image_read_svg('/Users/alex/Downloads/CSH1.png')
`5_korean_Chinese_all` <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
View(`5_korean_Chinese_all`)
rm(`5_korean_Chinese_all`)
5<- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
5 <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
5 <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
5_kc <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
kc_5 <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=FALSE)
kc_6 <- read.csv("~/Documents/GitHub/Visual-Similarity/6_korean_Chinese_all.csv", header=FALSE)
kc_7 <- read.csv("~/Documents/GitHub/Visual-Similarity/7_korean_Chinese_all.csv", header=FALSE)
kc_8 <- read.csv("~/Documents/GitHub/Visual-Similarity/8_korean_Chinese_all.csv", header=FALSE)
kc_5 <- read.csv("~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.csv", header=TRUE)
kc_7 <- read.csv("~/Documents/GitHub/Visual-Similarity/7_korean_Chinese_all.csv", header=TRUE)
kc_8 <- read.csv("~/Documents/GitHub/Visual-Similarity/8_korean_Chinese_all.csv", header=TRUE)
library("writexl")
write_xlsx(kc_5,"~/Documents/GitHub/Visual-Similarity/5_korean_Chinese_all.xlsx")
write_xlsx(kc_7,"~/Documents/GitHub/Visual-Similarity/7_korean_Chinese_all.xlsx")
write_xlsx(kc_8,"~/Documents/GitHub/Visual-Similarity/8_korean_Chinese_all.xlsx")
library(readr)
X1_German <- read_csv("Documents/GitHub/Visual-Similarity/results/1_German.csv",
col_types = cols(...1 = col_skip()))
View(X1_German)
X1_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/1_PC.csv")
X1_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_PC.csv")
View(X1_PC)
X1_PC <- read_csv("~/~/Documents/GitHub/Visual-Similarity/results//results/1_PC.csv")
library(readr)
X1_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results//results/1_PC.csv")
X1_German <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_German.csv",
col_types = cols(...1 = col_skip()))
X1_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/results/1_PC.csv")
X1_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_PC.csv")
X2_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/2_PC.csv")
X3_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/3_PC.csv")
X4_PC <- read_csv("~/Documents/GitHub/Visual-Similarity/results/4_PC.csv")
X1_German <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_German.csv",
col_types = cols(...1 = col_skip()))
X2_English <- read_csv("~/Documents/GitHub/Visual-Similarity/results/2_English.csv",
col_types = cols(...1 = col_skip()))
X3_English <- read_csv("~/Documents/GitHub/Visual-Similarity/results/3_English.csv",
col_types = cols(...1 = col_skip()))
X4_German <- read_csv("~/Documents/GitHub/Visual-Similarity/results/4_German.csv",
col_types = cols(...1 = col_skip()))
View(X4_German)
X1_symbol <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_symbol.csv",
col_types = cols(...1 = col_skip()))
X2_symbol <- read_csv("~/Documents/GitHub/Visual-Similarity/results/2_symbol.csv",
col_types = cols(...1 = col_skip()))
X3_symbol <- read_csv("~/Documents/GitHub/Visual-Similarity/results/3_symbol.csv",
col_types = cols(...1 = col_skip()))
X4_falsefont <- read_csv("~/Documents/GitHub/Visual-Similarity/results/4_falsefont.csv",
col_types = cols(...1 = col_skip()))
View(X4_falsefont)
X1 <- merge(X1_German, X1_symbol, by = 'ind')
View(X1)
X1 <- merge(X1_German, X1_PC, by = 'ind')
View(X1)
X1 <- merge(X1_German, X1_symbol, by = 'ind', all = TRUE)
View(X1)
rm(X1)
X1.a <- merge(X1_German, X1_PC, by = 'ind')
View(X1.a)
X1.b <- merge(X1_symbol, X1_PC, by = 'ind')
View(X1_German)
View(X1_PC)
View(X1.a)
View(X1.b)
X1 <- merge(X1.a, X1.b, by = NULL)
View(X1)
rm(X1)
?join
library(dplyr)
?join
X1 <- full_join(X1.a, X1.b)
?read_csv()
`1_symbol` <- read.csv("~/Documents/GitHub/Visual-Similarity/results/1_symbol.csv")
View(`1_symbol`)
X1_symbol <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_symbol.csv"),
X1_symbol <- read_csv("~/Documents/GitHub/Visual-Similarity/results/1_symbol.csv"),
X1_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/1_symbol.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X1_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/1_symbol.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X2_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/2_symbol.csv",
col_types = cols(...1 = col_skip(), ind = col_character()))
X3_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/3_symbol.csv",
col_types = cols(...1 = col_skip(), ind = col_character()))
X4_falsefont <- read_csv("Documents/GitHub/Visual-Similarity/results/4_falsefont.csv",
col_types = cols(...1 = col_skip(), ind = col_character()))
X1.a <- full_join(X1_symbol, X1_German)
View(X1.a)
X1 <- merge(X1.a, X1_PC)
View(X1)
function(a, b, c)(
a1 <- full_join(a, b)
X_i <- merge(a1, c)
function(a, b, c){}
a1 <- full_join(a, b)
final <- function(a, b, c){}
a1 <- full_join(a, b)
final <- function(a, b, c){
a1 <- full_join(a, b)
X_i <- merge(a1, c)
}
final <- function(a, b, c){
a1 <- full_join(a, b)
X_i <- merge(a1, c)
return(X_i)
}
X2 <- final(X2_symbol, X2_English, X2_PC)
X1_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/1_symbol.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X2_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/2_symbol.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X3_symbol <- read_csv("Documents/GitHub/Visual-Similarity/results/3_symbol.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X4_falsefont <- read_csv("Documents/GitHub/Visual-Similarity/results/4_falsefont.csv",
col_types = cols(...1 = col_skip(), content = col_character()))
X2 <- final(X2_symbol, X2_English, X2_PC)
View(X2)
X3 <- final(X3_symbol, X3_English, X3_PC)
X4 <- final(X4_falsefont, X4_German, X4_PC)
View(X4)
?write_csv
write_csv(X1, 'Documents/GitHub/Visual-Similarity/results/1.csv')
write_csv(X2, 'Documents/GitHub/Visual-Similarity/results/2.csv')
write_csv(X3, 'Documents/GitHub/Visual-Similarity/results/3.csv')
write_csv(X4, 'Documents/GitHub/Visual-Similarity/results/4.csv')
install.packages("metafor")
install.packages("meta")
install.packages("effectsize")
install.packages("dplyr")
library(readr)
mean_df_res <- read_csv("Documents/GitHub/Visual-Similarity/analysis/mean_df_res.csv")
View(mean_df_res)
symbol1 <- mean_df_res[1, ]
View(symbol1)
symbol1 <- mean_df_res[1, ]
symbol1 <- mean_df_res[1, ]
symbol2 <- mean_df_res[2, ]
symbol3 <- mean_df_res[3, ]
german1 <- mean_df_res[4, ]
german4 <- mean_df_res[5, ]
english2 <- mean_df_res[6, ]
english3 <- mean_df_res[7, ]
falsefont4 <- mean_df_res[8, ]
chinese5 <- mean_df_res[9, ]
chinese7 <- mean_df_res[10, ]
chinese8 <- mean_df_res[11, ]
korean5 <- mean_df_res[12, ]
korean7 <- mean_df_res[13, ]
korean8 <- mean_df_res[14, ]
View(korean8)
symbol1 <- mean_df_res[1, 2:7]
View(symbol1)
symbol1 <- mean_df_res[1, 2:7]
symbol2 <- mean_df_res[2, 2:7]
symbol3 <- mean_df_res[3, 2:7]
german1 <- mean_df_res[4, 2:7]
german4 <- mean_df_res[5, 2:7]
english2 <- mean_df_res[6, 2:7]
english3 <- mean_df_res[7, 2:7]
falsefont4 <- mean_df_res[8, 2:7]
chinese5 <- mean_df_res[9, 2:7]
chinese7 <- mean_df_res[10, 2:7]
chinese8 <- mean_df_res[11, 2:7]
korean5 <- mean_df_res[12, 2:7]
korean7 <- mean_df_res[13, 2:7]
korean8 <- mean_df_res[14, 2:7]
View(korean7)
X1 <- data.frame(
group = rep(c("symbol1", "german1"), each = 5),
data = c(symbol1,  german1)
)
View(X1)
View(X1)
rm(X1)
library(readr)
mean_df_res <- read_csv("Documents/GitHub/Visual-Similarity/analysis/mean_df_res.csv")
View(mean_df_res)
install.packages(tidyr)
install.packages("reshape2")
install.packages("reshape2")
library(readr)
mean_df_res <- read_csv("Documents/GitHub/Visual-Similarity/analysis/mean_df_res.csv")
View(mean_df_res)
?grep
study1 <- mean_df_res %>% filter(grep("1#", ...1))
library(dplyr)
study1 <- mean_df_res %>% filter(grep("1#", ...1))
library(dplyr)
study1 <- mean_df_res %>% filter(grep("1$", ...1))
grep("1$", ...1)
library(readr)
mean_df_res <- read_csv("Documents/GitHub/Visual-Similarity/analysis/mean_df_res.csv", col_names[1] = "condition")
library(readr)
library(reshape2)
library(dplyr)
library(lsr)
library(ggplot2)
# set cd
setwd("/Users/alex/Documents/GitHub/Visual-Similarity/analysis")
## get data
mean_df_res <- read_csv("mean_df_res.csv", col_types = cols(sum_of_square = col_skip()))
names(mean_df_res)[1] <- "condition" #change 1st column name
## compare between 2 conditions within each study
#get data
symbol1 <- mean_df_res[1, ]
german1 <- mean_df_res[4, ]
study1 <- merge(symbol1, german1, all = TRUE)
symbol2 <- mean_df_res[2, ]
english2 <- mean_df_res[6, ]
study2 <- merge(symbol2, english2, all = TRUE)
symbol3 <- mean_df_res[3, ]
english3 <- mean_df_res[7, ]
study3 <- merge(symbol3, english3, all = TRUE)
falsefont4 <-mean_df_res[8, ]
german4 <- mean_df_res[5, ]
study4 <- merge(falsefont4, german4, all = TRUE)
chinese5 <-mean_df_res[9, ]
korean5 <-mean_df_res[12, ]
study5 <- merge(chinese5, korean5, all = TRUE)
chinese7 <-mean_df_res[10, ]
korean7 <-mean_df_res[13, ]
study6 <- merge(chinese7, korean7, all = TRUE)
chinese8 <-mean_df_res[11, ]
korean8 <-mean_df_res[14, ]
study7 <- merge(chinese8, korean8, all = TRUE)
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
n = 0
for (stdy_n in studylist){
n = n + 1
stdy_n <- stdy_n %>% select(condition, PC) # select columns you want
studylist[[n]] <- stdy_n
}
#
# # filename function
# make_filename = function(label, number){
#   # these can be easily turned into parameters
#   suffix = ""
#   dir = "./"
#
#   # doing this, putting it all on a single line or using pipe %>%
#   # is just matter of style
#   filename = paste(label, number, suffix, sep="_")
#   filename = paste0(filename, ".csv")
#   filename = file.path(dir, filename)
#
#   filename
# }
#
# combinations = expand.grid("label"=string_label, "number"=string_number)
# filenames = mapply(make_filename, combinations$label, combinations$number)
#
# save_element = function(element, label, number){
#   filename = make_filename(label, number)
#   write.csv(element, filename,row.names=TRUE)
# }
#
# combinations = expand.grid("label"=string_label, "number"=string_number)
# mapply(save_element, myelement, combinations$label, combinations$number)
summary_list <- list()
df <- data.frame(matrix(ncol = 8, nrow = 7))
colnames(df) <- c("study.ID", "p.value", "dgr.of.frd", "conf.int.lb", "conf.int.ub", "mean.diff", "std.err", "cohens.d")
i = 0
for (studies in studylist){
i = i + 1
# wide to long
studies <- melt(studies, id.vars = "condition")
studies <- arrange(studies, condition) #sorting by condition
# paired t-test
t_test <- t.test(value ~ condition,
data = studies,
paired = TRUE)
# effect size
efs <- cohensD(value ~ condition,
data   = studies,
method = "paired")
summaries <- capture.output(print(t_test), print(efs))
summary_list[[i]] <- summaries
df[i, 1] <- i
df[i, 2] <- t_test$p.value
df[i, 3] <- t_test$parameter
df[i, 4] <- t_test$conf.int[1]
df[i, 5] <- t_test$conf.int[2]
df[i, 6] <- t_test$estimate
df[i, 7] <- t_test$stderr
df[i, 8] <- efs
}
j <- ggplot(df, aes(cohens.d, study.ID, xmin = cohens.d-std.err, xmax = cohens.d+std.err)) +
geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err), width=.2,
position=position_dodge(0.05)) + geom_point() + scale_x_continuous(breaks = seq(-1, 3, 0.5)) + scale_y_continuous(breaks = seq(1, 7, 1))
write_csv2(df, file = "./paired_t_result_PC.csv")
studies
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
studylist[[2]]
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
n = 0
for (stdy_n in studylist){
n = n + 1
stdy_n <- stdy_n %>% select(condition, obj_num, PC) # select columns you want
studylist[[n]] <- stdy_n
}
summary_list <- list()
df <- data.frame(matrix(ncol = 8, nrow = 7))
colnames(df) <- c("study.ID", "p.value", "dgr.of.frd", "conf.int.lb", "conf.int.ub", "mean.diff", "std.err", "cohens.d")
i = 0
for (studies in studylist){
i = i + 1
# wide to long
studies <- melt(studies, id.vars = "condition")
studies <- arrange(studies, condition) #sorting by condition
# paired t-test
t_test <- t.test(value ~ condition,
data = studies,
paired = TRUE)
# effect size
efs <- cohensD(value ~ condition,
data   = studies,
method = "paired")
summaries <- capture.output(print(t_test), print(efs))
summary_list[[i]] <- summaries
df[i, 1] <- i
df[i, 2] <- t_test$p.value
df[i, 3] <- t_test$parameter
df[i, 4] <- t_test$conf.int[1]
df[i, 5] <- t_test$conf.int[2]
df[i, 6] <- t_test$estimate
df[i, 7] <- t_test$stderr
df[i, 8] <- efs
}
j <- ggplot(df, aes(cohens.d, study.ID, xmin = cohens.d-std.err, xmax = cohens.d+std.err)) +
geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err), width=.2,
position=position_dodge(0.05)) + geom_point() + scale_x_continuous(breaks = seq(-1, 3, 0.5)) + scale_y_continuous(breaks = seq(1, 7, 1))
View(df)
j <- ggplot(df, aes(cohens.d, study.ID, xmin = cohens.d-std.err, xmax = cohens.d+std.err))
j + geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err),
width=.2, position=position_dodge(0.05))
j + geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err),
width=.2, position=position_dodge(0.05)) +
geom_point() + scale_x_continuous(breaks = seq(-1, 3, 0.5)) +
scale_y_continuous(breaks = seq(1, 7, 1))
j +   geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err),
width=.2, position=position_dodge(0.05)) +
geom_point() + scale_x_continuous(breaks = seq(-1, 3, 0.5)) +
scale_y_continuous(breaks = seq(1, 7, 1)) +
labs(x = "Effect Size", y = "Study ID", title = "Obj_num + PC Diff")
studylist <- list(study1, study2, study3, study4, study5, study6, study7)
studylist[[2]]
n = 0
for (stdy_n in studylist){
n = n + 1
stdy_n <- stdy_n %>% select(condition, disconnect_stroke, junc_sum) # select columns you want
studylist[[n]] <- stdy_n
}
summary_list <- list()
df <- data.frame(matrix(ncol = 8, nrow = 7))
colnames(df) <- c("study.ID", "p.value", "dgr.of.frd", "conf.int.lb", "conf.int.ub", "mean.diff", "std.err", "cohens.d")
i = 0
for (studies in studylist){
i = i + 1
# wide to long
studies <- melt(studies, id.vars = "condition")
studies <- arrange(studies, condition) #sorting by condition
# paired t-test
t_test <- t.test(value ~ condition,
data = studies,
paired = TRUE)
# effect size
efs <- cohensD(value ~ condition,
data   = studies,
method = "paired")
summaries <- capture.output(print(t_test), print(efs))
summary_list[[i]] <- summaries
df[i, 1] <- i
df[i, 2] <- t_test$p.value
df[i, 3] <- t_test$parameter
df[i, 4] <- t_test$conf.int[1]
df[i, 5] <- t_test$conf.int[2]
df[i, 6] <- t_test$estimate
df[i, 7] <- t_test$stderr
df[i, 8] <- efs
}
j <- ggplot(df, aes(cohens.d, study.ID, xmin = cohens.d-std.err, xmax = cohens.d+std.err))
j +
geom_errorbar(aes(xmin=cohens.d-std.err, xmax=cohens.d+std.err),
width=.2, position=position_dodge(0.05)) +
geom_point() + scale_x_continuous(breaks = seq(-1, 3, 0.5)) +
scale_y_continuous(breaks = seq(1, 7, 1)) +
labs(x = "Effect Size", y = "Study ID", title = "disc_strk + junc_sum Diff")
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
View(meta)
