df[n, 2] <- diff
}
library(meta)
library(metafor)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
# replace Visual Similarity Index with results from VS analysis
meta[30] <- rev(df$cohens.d)
# meta[30] <- rev(df$diff)
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
method.smd = "Hedges",
method.bias = "Egger")
MetaReg.vs <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
# replace Visual Similarity Index with results from VS analysis
meta[30] <- rev(df$cohens.d)
# meta[30] <- rev(df$diff)
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
method.smd = "Hedges",
method.bias = "Egger")
MetaReg.vs <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
# replace Visual Similarity Index with results from VS analysis
meta[30] <- rev(df$cohens.d)
# meta[30] <- rev(df$diff)
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
method.smd = "Hedges",
method.bias = "Egger")
MetaReg.vs <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
mod
MetaReg.ws <- metareg(mod, formula = ~ writing.system, method.tau = "REML", hakn = TRUE)
View(meta)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
# replace Visual Similarity Index with results from VS analysis
meta[30] <- rev(df$cohens.d)
# meta[30] <- rev(df$diff)
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
method.smd = "Hedges",
method.bias = "Egger")
View(df)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/analysis/meta.csv")
colnames(meta)[30] <- "visual.similarity"
colnames(meta)[31] <- "writing.system"
# replace Visual Similarity Index with results from VS analysis
# meta[30] <- rev(df$cohens.d)
meta[30] <- rev(df$diff)
# call the metacont random effect model
mod = metacont(
n.early,
mean.early.E64,
sd.early.E64,
n.late,
mean.late.E64,
sd.late.E64,
data = meta,
studlab = meta$author,
method.smd = "Hedges",
method.bias = "Egger")
MetaReg.vs <- metareg(mod, formula = ~ visual.similarity, method.tau = "REML", hakn = TRUE)
MetaReg.ws <- metareg(mod, formula = ~ writing.system, method.tau = "REML", hakn = TRUE)
MetaReg.vs
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Create a data frame with the study effects, sample sizes, and study labels
df <- data.frame(study_effects, sample_sizes, study_labels)
# Predict the expected study effect for each sample size
pred <- predictInterval(df, level=0.95, digits=3)
library(meta)
?predictInterval
install.packages("merTools")
library(merTools)
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Create a data frame with the study effects, sample sizes, and study labels
df <- data.frame(study_effects, sample_sizes, study_labels)
# Predict the expected study effect for each sample size
pred <- predictInterval(df, level=0.95, digits=3)
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Create a data frame with the study effects, sample sizes, and study labels
df <- data.frame(study_effects, sample_sizes, study_labels)
# Predict the expected study effect for each sample size
pred <- predictInterval(df, level=0.95)
?predict
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Calculate the regression line and confidence intervals
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 100)
preds <- predict(fit, newmods = log(x_vals))
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Predict the fitted values
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 100)
y_vals <- predict(fit, newx = x_vals, level = 0.95, type = "response")
# Plot the results
ggplot(data.frame(study_effects, sample_sizes, study_labels), aes(x = sample_sizes, y = study_effects)) +
geom_point(aes(size = exp(fit$coef[1] + fit$coef[2] * log(sample_sizes))),
shape = 21, fill = "blue", alpha = 0.7) +
geom_text(aes(label = study_labels), check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
geom_smooth(aes(x = x_vals, y = y_vals$pred), se = TRUE, colour = "red", method = "lm") +
xlab("Sample Size") +
ylab("Study Effects") +
ggtitle("Meta-Regression Analysis") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
length(x_vals)
length(study_effects)
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 7)
length(study_effects)
length(x_vals)
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Predict the fitted values
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 7)
y_vals <- predict(fit, newx = x_vals, level = 0.95, type = "response")
# Plot the results
ggplot(data.frame(study_effects, sample_sizes, study_labels), aes(x = sample_sizes, y = study_effects)) +
geom_point(aes(size = exp(fit$coef[1] + fit$coef[2] * log(sample_sizes))),
shape = 21, fill = "blue", alpha = 0.7) +
geom_text(aes(label = study_labels), check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
geom_smooth(aes(x = x_vals, y = y_vals$pred), se = TRUE, colour = "red", method = "lm") +
xlab("Sample Size") +
ylab("Study Effects") +
ggtitle("Meta-Regression Analysis") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#
# ggplot(df, aes(x = study_effects, y = sample_sizes, label = study_labels)) +
#   geom_point(shape = 21, fill = "blue", alpha = 0.7) +
#   geom_text(check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
#   geom_smooth(method = "lm", se = FALSE, color = "red") +
#   xlab("Study Effects") +
#   ylab("Sample Size") +
#   ggtitle("Bubble Plot with Regression Line") +
#   theme_bw() +
#   theme(plot.title = element_text(hjust = 0.5))
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Predict the fitted values
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 7)
y_vals <- predict(fit, newx = x_vals, level = 0.95, type = "response")
# Plot the results
ggplot(data.frame(study_effects, sample_sizes, study_labels), aes(x = sample_sizes, y = study_effects)) +
geom_point(aes(size = exp(fit$coef[1] + fit$coef[2] * log(sample_sizes))),
shape = 21, fill = "blue", alpha = 0.7) +
geom_text(aes(label = study_labels), check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
# geom_smooth(aes(x = x_vals, y = y_vals$pred), se = TRUE, colour = "red", method = "lm") +
xlab("Sample Size") +
ylab("Study Effects") +
ggtitle("Meta-Regression Analysis") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#
# ggplot(df, aes(x = study_effects, y = sample_sizes, label = study_labels)) +
#   geom_point(shape = 21, fill = "blue", alpha = 0.7) +
#   geom_text(check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
#   geom_smooth(method = "lm", se = FALSE, color = "red") +
#   xlab("Study Effects") +
#   ylab("Sample Size") +
#   ggtitle("Bubble Plot with Regression Line") +
#   theme_bw() +
#   theme(plot.title = element_text(hjust = 0.5))
study_effects <- mod$TE
sample_sizes <- mod$n.e
study_labels <- mod$studlab
study_variances <- mod$seTE
fit <- rma(yi = study_effects, vi = study_variances)
# Predict the fitted values
x_vals <- seq(min(sample_sizes), max(sample_sizes), length.out = 7)
y_vals <- predict(fit, newx = x_vals, level = 0.95, type = "response")
# # Plot the results
# ggplot(data.frame(study_effects, sample_sizes, study_labels), aes(x = sample_sizes, y = study_effects)) +
#   geom_point(aes(size = exp(fit$coef[1] + fit$coef[2] * log(sample_sizes))),
#              shape = 21, fill = "blue", alpha = 0.7) +
#   geom_text(aes(label = study_labels), check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
#   geom_smooth(aes(x = x_vals, y = y_vals$pred), se = TRUE, colour = "red", method = "lm") +
#   xlab("Sample Size") +
#   ylab("Study Effects") +
#   ggtitle("Meta-Regression Analysis") +
#   theme_bw() +
#   theme(plot.title = element_text(hjust = 0.5))
#
ggplot(df, aes(x = study_effects, y = sample_sizes, label = study_labels)) +
geom_point(shape = 21, fill = "blue", alpha = 0.7) +
geom_text(check_overlap = TRUE, vjust = 1.5, hjust = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
xlab("Study Effects") +
ylab("Sample Size") +
ggtitle("Bubble Plot with Regression Line") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
knit_with_parameters("~/Documents/GitHub/Visual-Similarity/analysis/VS+META.Rmd")
df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Summary.csv")
library(tidyverse)
library(readr)
df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Summary.csv")
df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Summary.csv")
View(df)
View(df)
word1 <- df$Early.word_1 - df$Late.word_1
df$Early.word_1
df$Late.word_1
df <- read_csv("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1offset.txt")
View(df)
?read_csv
library(readr)
lateN1_1 <- read_table("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1offset.txt")
View(lateN1_1)
earlyN1_1 <- read_table("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1onset.txt")
View(earlyN1_1)
earlyN1_1[-1, ] <- NA
View(earlyN1_1)
earlyN1_1 <- read_table("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1onset.txt")
View(earlyN1_1)
average <- earlyN1_1[27, ]
View(average)
earlyN1_1[27, ] <- NA
?array
means <- list()
for (i in 2:44){
cur_col <- earlyN1_1[ , i]
cur_mean <- mean(cur_col)
means[i] <- cur_mean
}
View(means)
View(cur_col)
?mean
for (i in 2:44){
cur_col <- earlyN1_1[ , i]
cur_mean <- mean(cur_col, na.rm = TRUE)
means[i] <- cur_mean
}
View(cur_col)
cur_col <- as.vector(earlyN1_1[ , i])
for (i in 2:44){
cur_col <- as.vector(earlyN1_1[ , i])
cur_mean <- mean(cur_col, na.rm = TRUE)
means[i] <- cur_mean
}
View(means)
View(cur_col)
which(cur_col)
class(cur_col)
cur_col
cur_col <- as.array(earlyN1_1[ , i])
cur_col <- as.vector(earlyN1_1[ , i])
cur_col <- as.array(cur_col)
cur_col
View(cur_col)
class(cur_col)
cur_mean <- mean(cur_col, na.rm = TRUE)
cur_mean
cur_mean <- mean(cur_col, na.rm = FALSE)
cur_mean <- mean(cur_col, na.rm = TRUE)
earlyN1_1 <- read_table("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1onset.txt")
lateN1_1 <- read_table("/Volumes/Data/Alex/1_Maurer_2005_ZRH/N1offset.txt")
getwd()
setwd("/Users/alex/Downloads")
write_csv(earlyN1_1, "earlyN1_1.csv")
write_csv(lateN1_1, "lateN1_1.csv")
source("~/Documents/GitHub/Visual-Similarity/EEG data/EEG_analysis.R", echo=TRUE)
View(df)
word_1 <- df$Early.word_1 - df$Late.word_1
word_2 <- df$Early.word_2 - df$Late.word_2
word_3 <- df$Early.word_3 - df$Late.word_3
word_4 <- df$Early.word_4 - df$Late.word_4
word_5 <- df$Early.word_5 - df$Late.word_5
word_6 <- df$Early.word_6 - df$Late.word_6
word_7 <- df$Early.word_7 - df$Late.word_7
symbol_1 <- df$Early.symbol_1 - df$Late.symbol_1
symbol_2 <- df$Early.word_2 - df$Late.word_2
symbol_3 <- df$Early.word_3 - df$Late.word_3
symbol_4 <- df$Early.word_4 - df$Late.word_4
symbol_5 <- df$Early.symbol_5 - df$Late.symbol_5
symbol_6 <- df$Early.word_6 - df$Late.word_6
symbol_7 <- df$Early.word_7 - df$Late.word_7
# meta analysis dataframe
meta <- read_csv("/Volumes/Data/Alex/meta.xlsx")
View(meta)
read_excel("/Volumes/Data/Alex/meta.xlsx")
library(readxl)
meta <- read_excel("/Volumes/Data/Alex/meta.xlsx")
View(meta)
View(meta)
meta <- meta[, -3:30]
meta <- meta[, -c(3:30)]
symbol_1
word_1 <- df$Early.word_1[3] - df$Late.word_1[3]
word_2 <- df$Early.word_2[3] - df$Late.word_2[3]
word_3 <- df$Early.word_3[3] - df$Late.word_3[3]
word_4 <- df$Early.word_4[3] - df$Late.word_4[3]
word_5 <- df$Early.word_5[3] - df$Late.word_5[3]
word_6 <- df$Early.word_6[3] - df$Late.word_6[3]
word_7 <- df$Early.word_7[3] - df$Late.word_7[3]
symbol_1 <- df$Early.symbol_1[3] - df$Late.symbol_1[3]
symbol_2 <- df$Early.word_2[3] - df$Late.word_2[3]
symbol_3 <- df$Early.word_3[3] - df$Late.word_3[3]
symbol_4 <- df$Early.word_4[3] - df$Late.word_4[3]
symbol_5 <- df$Early.symbol_5[3] - df$Late.symbol_5[3]
symbol_6 <- df$Early.word_6[3] - df$Late.word_6[3]
symbol_7 <- df$Early.word_7[3] - df$Late.word_7[3]
raw_df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Raw Data.csv")
View(raw_df)
word_1 <- raw_df$Early.word_1 - raw_df$Late.word_1
word_2 <- raw_df$Early.word_2 - raw_df$Late.word_2
word_3 <- raw_df$Early.word_3 - raw_df$Late.word_3
word_4 <- raw_df$Early.word_4 - raw_df$Late.word_4
word_5 <- raw_df$Early.word_5 - raw_df$Late.word_5
word_6 <- raw_df$Early.word_6 - raw_df$Late.word_6
word_7 <- raw_df$Early.word_7 - raw_df$Late.word_7
symbol_1 <- raw_df$Early.symbol_1 - raw_df$Late.symbol_1
symbol_2 <- raw_df$Early.word_2 - raw_df$Late.word_2
symbol_3 <- raw_df$Early.word_3 - raw_df$Late.word_3
symbol_4 <- raw_df$Early.word_4 - raw_df$Late.word_4
symbol_5 <- raw_df$Early.symbol_5 - raw_df$Late.symbol_5
symbol_6 <- raw_df$Early.word_6 - raw_df$Late.word_6
symbol_7 <- raw_df$Early.word_7 - raw_df$Late.word_7
symbol_1
cbind(symbol_1, symbol_2)
a <- cbind(symbol_1, symbol_2)
View(a)
library(readr)
raw_df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Raw Data.csv")
# calculate difference between word and symbol
word_1 <- raw_df$Early.word_1 - raw_df$Late.word_1
word_2 <- raw_df$Early.word_2 - raw_df$Late.word_2
word_3 <- raw_df$Early.word_3 - raw_df$Late.word_3
word_4 <- raw_df$Early.word_4 - raw_df$Late.word_4
word_5 <- raw_df$Early.word_5 - raw_df$Late.word_5
word_6 <- raw_df$Early.word_6 - raw_df$Late.word_6
word_7 <- raw_df$Early.word_7 - raw_df$Late.word_7
symbol_1 <- raw_df$Early.symbol_1 - raw_df$Late.symbol_1
symbol_2 <- raw_df$Early.symbok_2 - raw_df$Late.symbok_2
symbol_3 <- raw_df$Early.symbok_3 - raw_df$Late.symbok_3
symbol_4 <- raw_df$Early.symbok_4 - raw_df$Late.symbok_4
symbol_5 <- raw_df$Early.symbol_5 - raw_df$Late.symbol_5
symbol_6 <- raw_df$Early.symbok_6 - raw_df$Late.symbok_6
symbol_7 <- raw_df$Early.symbok_7 - raw_df$Late.symbok_7
word <- cbind(word_1, word_2, word_3, word_4, word_5, word_6, word_7)
symbol <- cbind(symbol_1, symbol_2, symbol_3, symbol_4, symbol_5, symbol_6, symbol_7)
View(word)
library(readr)
raw_df <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/Raw Data.csv")
# calculate difference between word and symbol
word_1 <- raw_df$Late.word_1 - raw_df$Early.word_1
word_2 <- raw_df$Late.word_2 - raw_df$Early.word_2
word_3 <- raw_df$Late.word_3 - raw_df$Early.word_3
word_4 <- raw_df$Late.word_4 - raw_df$Early.word_4
word_5 <- raw_df$Late.word_5 - raw_df$Early.word_5
word_6 <- raw_df$Late.word_6 - raw_df$Early.word_6
word_7 <- raw_df$Late.word_7 - raw_df$Early.word_7
symbol_1 <- raw_df$Late.symbol_1 - raw_df$Early.symbol_1
symbol_2 <- raw_df$Late.symbol_2 - raw_df$Early.symbol_2
symbol_3 <- raw_df$Late.symbol_3 - raw_df$Early.symbol_3
symbol_4 <- raw_df$Late.symbol_4 - raw_df$Early.symbol_4
symbol_5 <- raw_df$Late.symbol_5 - raw_df$Early.symbol_5
symbol_6 <- raw_df$Late.symbol_6 - raw_df$Early.symbol_6
symbol_7 <- raw_df$Late.symbol_7 - raw_df$Early.symbol_7
# comparison
word <- cbind(word_1, word_2, word_3, word_4, word_5, word_6, word_7)
symbol <- cbind(symbol_1, symbol_2, symbol_3, symbol_4, symbol_5, symbol_6, symbol_7)
View(symbol)
# meta analysis dataframe
meta_ori <- read_excel("/Volumes/Data/Alex/meta.xlsx")
View(meta_ori)
colnames(df) <- c("word.mean", "word.n", "word.sd", "symbol.mean", "symbol.n", "symbol.sd")
source("~/Documents/GitHub/Visual-Similarity/EEG data/EEG_analysis.R", echo=TRUE)
want
meta_ori <- meta_ori[, -c(3:30)]
View(df)
View(word)
View(df)
View(word)
?mean
View(df)
for (i in 1:7){
w <- as.vector(word[, i])
w_mean <- mean(w, na.rm = TRUE)
w_n <- nrow(word[, i])
w_sd <- sd(w, na.rm = TRUE)
s <- as.vector(symbol[, i])
s_mean <- mean(s, na.rm = TRUE)
s_n <- nrow(symbol[, i])
s_sd <- sd(s, na.rm = TRUE)
df[i, 1] <- w_mean
df[i, 2] <- w_n
df[i, 3] <- w_sd
df[i, 4] <- s_mean
df[i, 5] <- s_n
df[i, 6] <- s_sd
}
w
w_mean
w_n
nrow(word[,i])
length(symbol[, i])
?length
sum(!is.na(symbol[, i]))
w_sd
for (i in 1:7){
w <- as.vector(word[, i])
w_mean <- mean(w, na.rm = TRUE)
w_n <- sum(!is.na(symbol[, i]))
w_sd <- sd(w, na.rm = TRUE)
s <- as.vector(symbol[, i])
s_mean <- mean(s, na.rm = TRUE)
s_n <- sum(!is.na(symbol[, i]))
s_sd <- sd(s, na.rm = TRUE)
df[i, 1] <- w_mean
df[i, 2] <- w_n
df[i, 3] <- w_sd
df[i, 4] <- s_mean
df[i, 5] <- s_n
df[i, 6] <- s_sd
}
# final meta_excel
meta <- cbind(meta_ori, df)
View(meta)
write_csv(meta, "./meta_word-symbol.csv")
getwd()
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/meta_word-symbol.csv")
View(meta)
# import data
meta <- read_csv("/Users/alex/Documents/GitHub/Visual-Similarity/EEG data/meta_word-symbol.csv")
View(meta)
mod = metacont(
word.n,
word.mean,
word.sd,
symbol.n,
symbol.mean,
symbol.sd,
data = meta,
studlab = meta$author,
sm = "SMD")
source("~/Documents/GitHub/Visual-Similarity/EEG data/meta-analysis2.R", echo=TRUE)
mod
######
# forest plot mod
forest(mod)
source("~/Documents/GitHub/Visual-Similarity/EEG data/meta-analysis2.R", echo=TRUE)
m_multi
